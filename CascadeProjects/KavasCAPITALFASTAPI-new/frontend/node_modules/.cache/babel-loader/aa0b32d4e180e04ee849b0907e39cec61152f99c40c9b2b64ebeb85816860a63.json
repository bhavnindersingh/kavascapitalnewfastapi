{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { optionsApi } from '../services/api';\nimport { webSocketService } from '../services/websocket';\nimport { setError, setLoading, setOptionChainData, updateOptionData } from '../store/slices/optionChainSlice';\nexport const useMarketData = (symbol, selectedExpiry) => {\n  _s();\n  const dispatch = useDispatch();\n  const optionChainData = useSelector(state => state.optionChain.data);\n  const handleMarketData = useCallback(message => {\n    if (message.type === 'MARKET_DATA' && message.data) {\n      const marketData = message.data;\n      // Update the specific option's data in the chain\n      if (optionChainData) {\n        const updatedStrikes = optionChainData.strikes.map(strike => {\n          var _strike$call, _strike$put;\n          if (((_strike$call = strike.call) === null || _strike$call === void 0 ? void 0 : _strike$call.instrument_token) === marketData.instrument_token) {\n            return {\n              ...strike,\n              call: {\n                ...strike.call,\n                ltp: marketData.last_price,\n                oi: marketData.oi,\n                change: marketData.change\n              }\n            };\n          }\n          if (((_strike$put = strike.put) === null || _strike$put === void 0 ? void 0 : _strike$put.instrument_token) === marketData.instrument_token) {\n            return {\n              ...strike,\n              put: {\n                ...strike.put,\n                ltp: marketData.last_price,\n                oi: marketData.oi,\n                change: marketData.change\n              }\n            };\n          }\n          return strike;\n        });\n        dispatch(updateOptionData({\n          strikes: updatedStrikes\n        }));\n      }\n    }\n  }, [optionChainData, dispatch]);\n\n  // Connect to WebSocket when symbol and expiry change\n  useEffect(() => {\n    if (symbol && selectedExpiry) {\n      webSocketService.connect(symbol, selectedExpiry);\n      return () => {\n        webSocketService.disconnect();\n      };\n    }\n  }, [symbol, selectedExpiry]);\n\n  // Fetch initial option chain data\n  useEffect(() => {\n    const fetchOptionChain = async () => {\n      if (!symbol || !selectedExpiry) return;\n      try {\n        dispatch(setLoading(true));\n        const response = await optionsApi.getOptionChain(symbol, selectedExpiry);\n        dispatch(setOptionChainData(response.data));\n      } catch (error) {\n        dispatch(setError(error instanceof Error ? error.message : 'Failed to fetch option chain'));\n      } finally {\n        dispatch(setLoading(false));\n      }\n    };\n    fetchOptionChain();\n  }, [symbol, selectedExpiry, dispatch]);\n\n  // Subscribe to market data updates\n  useEffect(() => {\n    if (optionChainData !== null && optionChainData !== void 0 && optionChainData.strikes) {\n      // Extract instrument tokens from both calls and puts, filtering out undefined values\n      const instrumentTokens = optionChainData.strikes.flatMap(strike => {\n        var _strike$call2, _strike$put2;\n        return [(_strike$call2 = strike.call) === null || _strike$call2 === void 0 ? void 0 : _strike$call2.instrument_token, (_strike$put2 = strike.put) === null || _strike$put2 === void 0 ? void 0 : _strike$put2.instrument_token];\n      }).filter(token => token !== undefined);\n      if (instrumentTokens.length > 0) {\n        console.log('Subscribing to instruments:', instrumentTokens);\n        webSocketService.subscribe(instrumentTokens);\n        webSocketService.addMessageHandler(handleMarketData);\n        return () => {\n          console.log('Unsubscribing from instruments:', instrumentTokens);\n          webSocketService.unsubscribe(instrumentTokens);\n          webSocketService.removeMessageHandler(handleMarketData);\n        };\n      }\n    }\n  }, [optionChainData, handleMarketData]);\n  return {\n    optionChainData\n  };\n};\n_s(useMarketData, \"ECHFSrmhOtinYnr/8M1q6tbuu4A=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["useCallback","useEffect","useDispatch","useSelector","optionsApi","webSocketService","setError","setLoading","setOptionChainData","updateOptionData","useMarketData","symbol","selectedExpiry","_s","dispatch","optionChainData","state","optionChain","data","handleMarketData","message","type","marketData","updatedStrikes","strikes","map","strike","_strike$call","_strike$put","call","instrument_token","ltp","last_price","oi","change","put","connect","disconnect","fetchOptionChain","response","getOptionChain","error","Error","instrumentTokens","flatMap","_strike$call2","_strike$put2","filter","token","undefined","length","console","log","subscribe","addMessageHandler","unsubscribe","removeMessageHandler"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/hooks/useMarketData.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { optionsApi } from '../services/api';\nimport { webSocketService } from '../services/websocket';\nimport type { MarketData, WSMessage, OptionChainData } from '../types/options';\nimport { RootState } from '../store';\nimport { setError, setLoading, setOptionChainData, updateOptionData } from '../store/slices/optionChainSlice';\n\nexport const useMarketData = (symbol: string, selectedExpiry?: string) => {\n    const dispatch = useDispatch();\n    const optionChainData = useSelector((state: RootState) => state.optionChain.data);\n\n    const handleMarketData = useCallback((message: WSMessage) => {\n        if (message.type === 'MARKET_DATA' && message.data) {\n            const marketData = message.data as MarketData;\n            // Update the specific option's data in the chain\n            if (optionChainData) {\n                const updatedStrikes = optionChainData.strikes.map(strike => {\n                    if (strike.call?.instrument_token === marketData.instrument_token) {\n                        return {\n                            ...strike,\n                            call: {\n                                ...strike.call,\n                                ltp: marketData.last_price,\n                                oi: marketData.oi,\n                                change: marketData.change,\n                            },\n                        };\n                    }\n                    if (strike.put?.instrument_token === marketData.instrument_token) {\n                        return {\n                            ...strike,\n                            put: {\n                                ...strike.put,\n                                ltp: marketData.last_price,\n                                oi: marketData.oi,\n                                change: marketData.change,\n                            },\n                        };\n                    }\n                    return strike;\n                });\n\n                dispatch(updateOptionData({ strikes: updatedStrikes }));\n            }\n        }\n    }, [optionChainData, dispatch]);\n\n    // Connect to WebSocket when symbol and expiry change\n    useEffect(() => {\n        if (symbol && selectedExpiry) {\n            webSocketService.connect(symbol, selectedExpiry);\n            return () => {\n                webSocketService.disconnect();\n            };\n        }\n    }, [symbol, selectedExpiry]);\n\n    // Fetch initial option chain data\n    useEffect(() => {\n        const fetchOptionChain = async () => {\n            if (!symbol || !selectedExpiry) return;\n\n            try {\n                dispatch(setLoading(true));\n                const response = await optionsApi.getOptionChain(symbol, selectedExpiry);\n                dispatch(setOptionChainData(response.data));\n            } catch (error) {\n                dispatch(setError(error instanceof Error ? error.message : 'Failed to fetch option chain'));\n            } finally {\n                dispatch(setLoading(false));\n            }\n        };\n\n        fetchOptionChain();\n    }, [symbol, selectedExpiry, dispatch]);\n\n    // Subscribe to market data updates\n    useEffect(() => {\n        if (optionChainData?.strikes) {\n            // Extract instrument tokens from both calls and puts, filtering out undefined values\n            const instrumentTokens = optionChainData.strikes\n                .flatMap(strike => [\n                    strike.call?.instrument_token,\n                    strike.put?.instrument_token\n                ])\n                .filter((token): token is number => token !== undefined);\n            \n            if (instrumentTokens.length > 0) {\n                console.log('Subscribing to instruments:', instrumentTokens);\n                webSocketService.subscribe(instrumentTokens);\n                webSocketService.addMessageHandler(handleMarketData);\n\n                return () => {\n                    console.log('Unsubscribing from instruments:', instrumentTokens);\n                    webSocketService.unsubscribe(instrumentTokens);\n                    webSocketService.removeMessageHandler(handleMarketData);\n                };\n            }\n        }\n    }, [optionChainData, handleMarketData]);\n\n    return {\n        optionChainData,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}