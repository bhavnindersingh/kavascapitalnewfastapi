{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inder\\\\CascadeProjects\\\\KavasCAPITALFASTAPI-new\\\\frontend\\\\src\\\\components\\\\Charts\\\\SpotChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const SpotChart = ({\n  data,\n  title = 'Spot Price Chart'\n}) => {\n  const chartData = {\n    labels: data.map(d => new Date(d.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Price',\n      data: data.map(d => d.last_price),\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1,\n      pointRadius: 0\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: title\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Price'\n        }\n      }\n    },\n    animation: false\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_c = SpotChart;\nvar _c;\n$RefreshReg$(_c, \"SpotChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","SpotChart","data","title","chartData","labels","map","d","Date","timestamp","toLocaleTimeString","datasets","label","last_price","borderColor","tension","pointRadius","options","responsive","plugins","legend","position","display","text","scales","x","y","animation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/components/Charts/SpotChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ChartData,\n    ChartOptions\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { MarketData } from '../../types/marketData';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\ninterface Props {\n    data: MarketData[];\n    title?: string;\n}\n\nexport const SpotChart: React.FC<Props> = ({ data, title = 'Spot Price Chart' }) => {\n    const chartData: ChartData<'line'> = {\n        labels: data.map(d => new Date(d.timestamp).toLocaleTimeString()),\n        datasets: [\n            {\n                label: 'Price',\n                data: data.map(d => d.last_price),\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1,\n                pointRadius: 0,\n            },\n        ],\n    };\n\n    const options: ChartOptions<'line'> = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top' as const,\n            },\n            title: {\n                display: true,\n                text: title,\n            },\n        },\n        scales: {\n            x: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Time'\n                }\n            },\n            y: {\n                display: true,\n                title: {\n                    display: true,\n                    text: 'Price'\n                }\n            }\n        },\n        animation: false,\n    };\n\n    return (\n        <Line data={chartData} options={options} />\n    );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAA6B,OAAO;AAChD,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QAGH,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvCV,OAAO,CAACW,QAAQ,CACZV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;AAOD,OAAO,MAAMK,SAA0B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG;AAAmB,CAAC,KAAK;EAChF,MAAMC,SAA4B,GAAG;IACjCC,MAAM,EAAEH,IAAI,CAACI,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACjEC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,OAAO;MACdV,IAAI,EAAEA,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,UAAU,CAAC;MACjCC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,OAA6B,GAAG;IAClCC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd,CAAC;MACDlB,KAAK,EAAE;QACHmB,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEpB;MACV;IACJ,CAAC;IACDqB,MAAM,EAAE;MACJC,CAAC,EAAE;QACCH,OAAO,EAAE,IAAI;QACbnB,KAAK,EAAE;UACHmB,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV;MACJ,CAAC;MACDG,CAAC,EAAE;QACCJ,OAAO,EAAE,IAAI;QACbnB,KAAK,EAAE;UACHmB,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV;MACJ;IACJ,CAAC;IACDI,SAAS,EAAE;EACf,CAAC;EAED,oBACI5B,OAAA,CAACF,IAAI;IAACK,IAAI,EAAEE,SAAU;IAACa,OAAO,EAAEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnD,CAAC;AAACC,EAAA,GA/CW/B,SAA0B;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}