{"ast":null,"code":"class WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectTimeout = 3000;\n    // 3 seconds\n    this.messageHandlers = [];\n    this.connect = this.connect.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.addMessageHandler = this.addMessageHandler.bind(this);\n    this.removeMessageHandler = this.removeMessageHandler.bind(this);\n  }\n  connect(symbol, expiry) {\n    var _this$ws;\n    if (((_this$ws = this.ws) === null || _this$ws === void 0 ? void 0 : _this$ws.readyState) === WebSocket.OPEN) {\n      this.disconnect();\n    }\n    const token = localStorage.getItem('kite_access_token');\n    if (!token) {\n      console.error('No access token found');\n      return;\n    }\n    this.ws = new WebSocket(`ws://localhost:8000/ws/options/${symbol}/${expiry}?token=${token}`);\n    this.ws.onopen = () => {\n      console.log('WebSocket connected');\n      this.reconnectAttempts = 0;\n    };\n    this.ws.onmessage = event => {\n      try {\n        const message = JSON.parse(event.data);\n        this.messageHandlers.forEach(handler => handler(message));\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    this.ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    this.ws.onclose = () => {\n      console.log('WebSocket disconnected');\n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        setTimeout(() => {\n          this.reconnectAttempts++;\n          this.connect(symbol, expiry);\n        }, this.reconnectTimeout);\n      }\n    };\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n  sendMessage(message) {\n    var _this$ws2;\n    if (((_this$ws2 = this.ws) === null || _this$ws2 === void 0 ? void 0 : _this$ws2.readyState) === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(message));\n    } else {\n      console.error('WebSocket is not connected');\n    }\n  }\n  addMessageHandler(handler) {\n    this.messageHandlers.push(handler);\n  }\n  removeMessageHandler(handler) {\n    this.messageHandlers = this.messageHandlers.filter(h => h !== handler);\n  }\n}\nexport const webSocketService = new WebSocketService();","map":{"version":3,"names":["WebSocketService","constructor","ws","reconnectAttempts","maxReconnectAttempts","reconnectTimeout","messageHandlers","connect","bind","disconnect","sendMessage","addMessageHandler","removeMessageHandler","symbol","expiry","_this$ws","readyState","WebSocket","OPEN","token","localStorage","getItem","console","error","onopen","log","onmessage","event","message","JSON","parse","data","forEach","handler","onerror","onclose","setTimeout","close","_this$ws2","send","stringify","push","filter","h","webSocketService"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/services/websocket.ts"],"sourcesContent":["import { WSMessage } from '../types/options';\n\nclass WebSocketService {\n    private ws: WebSocket | null = null;\n    private reconnectAttempts = 0;\n    private maxReconnectAttempts = 5;\n    private reconnectTimeout = 3000; // 3 seconds\n    private messageHandlers: ((message: WSMessage) => void)[] = [];\n\n    constructor() {\n        this.connect = this.connect.bind(this);\n        this.disconnect = this.disconnect.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.addMessageHandler = this.addMessageHandler.bind(this);\n        this.removeMessageHandler = this.removeMessageHandler.bind(this);\n    }\n\n    connect(symbol: string, expiry: string) {\n        if (this.ws?.readyState === WebSocket.OPEN) {\n            this.disconnect();\n        }\n\n        const token = localStorage.getItem('kite_access_token');\n        if (!token) {\n            console.error('No access token found');\n            return;\n        }\n\n        this.ws = new WebSocket(`ws://localhost:8000/ws/options/${symbol}/${expiry}?token=${token}`);\n\n        this.ws.onopen = () => {\n            console.log('WebSocket connected');\n            this.reconnectAttempts = 0;\n        };\n\n        this.ws.onmessage = (event) => {\n            try {\n                const message: WSMessage = JSON.parse(event.data);\n                this.messageHandlers.forEach(handler => handler(message));\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error);\n            }\n        };\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n\n        this.ws.onclose = () => {\n            console.log('WebSocket disconnected');\n            if (this.reconnectAttempts < this.maxReconnectAttempts) {\n                setTimeout(() => {\n                    this.reconnectAttempts++;\n                    this.connect(symbol, expiry);\n                }, this.reconnectTimeout);\n            }\n        };\n    }\n\n    disconnect() {\n        if (this.ws) {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n\n    sendMessage(message: any) {\n        if (this.ws?.readyState === WebSocket.OPEN) {\n            this.ws.send(JSON.stringify(message));\n        } else {\n            console.error('WebSocket is not connected');\n        }\n    }\n\n    addMessageHandler(handler: (message: WSMessage) => void) {\n        this.messageHandlers.push(handler);\n    }\n\n    removeMessageHandler(handler: (message: WSMessage) => void) {\n        this.messageHandlers = this.messageHandlers.filter(h => h !== handler);\n    }\n}\n\nexport const webSocketService = new WebSocketService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}