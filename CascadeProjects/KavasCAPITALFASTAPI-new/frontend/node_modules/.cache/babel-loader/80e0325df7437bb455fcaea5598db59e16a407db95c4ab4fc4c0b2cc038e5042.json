{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { optionsApi } from '../../../services/api';\nimport { webSocketService } from '../../../services/websocket';\nexport const useOptionChainData = ({\n  symbol,\n  expiry,\n  threshold = 0.05\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [expiryDates, setExpiryDates] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch expiry dates when symbol changes\n  useEffect(() => {\n    const fetchExpiryDates = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await optionsApi.getExpiryDates(symbol);\n        setExpiryDates(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Failed to fetch expiry dates:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to fetch expiry dates');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExpiryDates();\n  }, [symbol]);\n\n  // Handle WebSocket messages\n  const handleMessage = useCallback(message => {\n    switch (message.type) {\n      case 'STOCK_UPDATE':\n      case 'OPTION_UPDATE':\n        if (message.data) {\n          setData(prevData => ({\n            ...prevData,\n            ...message.data\n          }));\n        }\n        break;\n      case 'ERROR':\n        setError(message.error || 'Unknown error occurred');\n        break;\n    }\n  }, []);\n\n  // Connect to WebSocket\n  const connect = useCallback((symbol, expiry) => {\n    try {\n      setError(null);\n      webSocketService.connect(symbol, expiry);\n      webSocketService.addMessageHandler(handleMessage);\n    } catch (err) {\n      setError(err.message || 'Failed to connect to WebSocket');\n    }\n  }, [handleMessage]);\n\n  // Disconnect from WebSocket\n  const disconnect = useCallback(() => {\n    webSocketService.removeMessageHandler(handleMessage);\n    webSocketService.disconnect();\n  }, [handleMessage]);\n\n  // Auto-connect when symbol and expiry are provided\n  useEffect(() => {\n    if (symbol && expiry) {\n      connect(symbol, expiry);\n      return () => disconnect();\n    }\n  }, [symbol, expiry, connect, disconnect]);\n  return {\n    data,\n    expiryDates,\n    loading,\n    error,\n    connect,\n    disconnect\n  };\n};\n_s(useOptionChainData, \"Vabh89DOBnIVTAfesL1NJUL1eVA=\");","map":{"version":3,"names":["useState","useEffect","useCallback","optionsApi","webSocketService","useOptionChainData","symbol","expiry","threshold","_s","data","setData","expiryDates","setExpiryDates","loading","setLoading","error","setError","fetchExpiryDates","response","getExpiryDates","err","_err$response","_err$response$data","console","detail","handleMessage","message","type","prevData","connect","addMessageHandler","disconnect","removeMessageHandler"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/components/OptionChain/hooks/useOptionChainData.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { optionsApi } from '../../../services/api';\r\nimport { webSocketService } from '../../../services/websocket';\r\nimport type { OptionChainData, WSMessage } from '../../../types/options';\r\n\r\ninterface UseOptionChainDataProps {\r\n  symbol: string;\r\n  expiry?: string;\r\n  threshold?: number;\r\n}\r\n\r\ninterface UseOptionChainDataReturn {\r\n  data: OptionChainData | null;\r\n  expiryDates: string[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  connect: (symbol: string, expiry: string) => void;\r\n  disconnect: () => void;\r\n}\r\n\r\nexport const useOptionChainData = ({\r\n  symbol,\r\n  expiry,\r\n  threshold = 0.05\r\n}: UseOptionChainDataProps): UseOptionChainDataReturn => {\r\n  const [data, setData] = useState<OptionChainData | null>(null);\r\n  const [expiryDates, setExpiryDates] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch expiry dates when symbol changes\r\n  useEffect(() => {\r\n    const fetchExpiryDates = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const response = await optionsApi.getExpiryDates(symbol);\r\n        setExpiryDates(response.data);\r\n      } catch (err: any) {\r\n        console.error('Failed to fetch expiry dates:', err);\r\n        setError(err.response?.data?.detail || 'Failed to fetch expiry dates');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExpiryDates();\r\n  }, [symbol]);\r\n\r\n  // Handle WebSocket messages\r\n  const handleMessage = useCallback((message: WSMessage) => {\r\n    switch (message.type) {\r\n      case 'STOCK_UPDATE':\r\n      case 'OPTION_UPDATE':\r\n        if (message.data) {\r\n          setData(prevData => ({\r\n            ...prevData,\r\n            ...message.data,\r\n          } as OptionChainData));\r\n        }\r\n        break;\r\n      case 'ERROR':\r\n        setError(message.error || 'Unknown error occurred');\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  // Connect to WebSocket\r\n  const connect = useCallback((symbol: string, expiry: string) => {\r\n    try {\r\n      setError(null);\r\n      webSocketService.connect(symbol, expiry);\r\n      webSocketService.addMessageHandler(handleMessage);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to connect to WebSocket');\r\n    }\r\n  }, [handleMessage]);\r\n\r\n  // Disconnect from WebSocket\r\n  const disconnect = useCallback(() => {\r\n    webSocketService.removeMessageHandler(handleMessage);\r\n    webSocketService.disconnect();\r\n  }, [handleMessage]);\r\n\r\n  // Auto-connect when symbol and expiry are provided\r\n  useEffect(() => {\r\n    if (symbol && expiry) {\r\n      connect(symbol, expiry);\r\n      return () => disconnect();\r\n    }\r\n  }, [symbol, expiry, connect, disconnect]);\r\n\r\n  return {\r\n    data,\r\n    expiryDates,\r\n    loading,\r\n    error,\r\n    connect,\r\n    disconnect\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}