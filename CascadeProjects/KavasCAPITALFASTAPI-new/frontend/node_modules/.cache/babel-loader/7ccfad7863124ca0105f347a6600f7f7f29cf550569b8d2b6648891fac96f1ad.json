{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWebSocket } from './useWebSocket';\nimport { setError } from '../store/slices/authSlice';\nexport const useAuth = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated,\n    accessToken,\n    loading,\n    error\n  } = useSelector(state => state.auth);\n  const {\n    disconnect\n  } = useWebSocket();\n  const handleDisconnect = useCallback(() => {\n    disconnect();\n  }, [disconnect]);\n  useEffect(() => {\n    // Disconnect WebSocket when component unmounts\n    return () => {\n      handleDisconnect();\n    };\n  }, [handleDisconnect]);\n  useEffect(() => {\n    // Check if token exists in localStorage but not in state\n    const storedToken = localStorage.getItem('kite_access_token');\n    if (!storedToken) {\n      handleDisconnect();\n    } else if (storedToken && !accessToken) {\n      dispatch(setError('Session expired. Please login again.'));\n    }\n  }, [accessToken, dispatch, handleDisconnect]);\n  return {\n    isAuthenticated,\n    accessToken,\n    loading,\n    error\n  };\n};\n_s(useAuth, \"/rYOMRP3oZzVqqbkEbiCtmrX2gg=\", false, function () {\n  return [useDispatch, useSelector, useWebSocket];\n});","map":{"version":3,"names":["useEffect","useCallback","useDispatch","useSelector","useWebSocket","setError","useAuth","_s","dispatch","isAuthenticated","accessToken","loading","error","state","auth","disconnect","handleDisconnect","storedToken","localStorage","getItem"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type { RootState } from '../store';\nimport { useWebSocket } from './useWebSocket';\nimport { setError } from '../store/slices/authSlice';\n\nexport const useAuth = (): {\n  isAuthenticated: boolean;\n  accessToken: string | null;\n  loading: boolean;\n  error: string | null;\n} => {\n  const dispatch = useDispatch();\n  const { isAuthenticated, accessToken, loading, error } = useSelector(\n    (state: RootState) => state.auth\n  );\n  const { disconnect } = useWebSocket();\n\n  const handleDisconnect = useCallback(() => {\n    disconnect();\n  }, [disconnect]);\n\n  useEffect(() => {\n    // Disconnect WebSocket when component unmounts\n    return () => {\n      handleDisconnect();\n    };\n  }, [handleDisconnect]);\n\n  useEffect(() => {\n    // Check if token exists in localStorage but not in state\n    const storedToken = localStorage.getItem('kite_access_token');\n    if (!storedToken) {\n      handleDisconnect();\n    } else if (storedToken && !accessToken) {\n      dispatch(setError('Session expired. Please login again.'));\n    }\n  }, [accessToken, dispatch, handleDisconnect]);\n\n  return {\n    isAuthenticated,\n    accessToken,\n    loading,\n    error,\n  };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,QAAQ,2BAA2B;AAEpD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAKlB;EAAAC,EAAA;EACH,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,eAAe;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,WAAW,CACjEU,KAAgB,IAAKA,KAAK,CAACC,IAC9B,CAAC;EACD,MAAM;IAAEC;EAAW,CAAC,GAAGX,YAAY,CAAC,CAAC;EAErC,MAAMY,gBAAgB,GAAGf,WAAW,CAAC,MAAM;IACzCc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBf,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACXgB,gBAAgB,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtBhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IAC7D,IAAI,CAACF,WAAW,EAAE;MAChBD,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM,IAAIC,WAAW,IAAI,CAACP,WAAW,EAAE;MACtCF,QAAQ,CAACH,QAAQ,CAAC,sCAAsC,CAAC,CAAC;IAC5D;EACF,CAAC,EAAE,CAACK,WAAW,EAAEF,QAAQ,EAAEQ,gBAAgB,CAAC,CAAC;EAE7C,OAAO;IACLP,eAAe;IACfC,WAAW;IACXC,OAAO;IACPC;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAvCWD,OAAO;EAAA,QAMDJ,WAAW,EAC6BC,WAAW,EAG7CC,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}