{"ast":null,"code":"import axios from'axios';const API_URL='http://localhost:8000/api/v1';// Create axios instance with base configuration\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add request interceptor to include access token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('kite_access_token');if(token){config.headers['Authorization']=\"Bearer \".concat(token);}return config;});// Add response interceptor to handle errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Handle unauthorized access\nlocalStorage.removeItem('kite_access_token');}return Promise.reject(error);});// API endpoints\nexport const kiteApi={validateToken:token=>api.get(\"/kite/verify-token/\".concat(token)),getProfile:()=>api.get('/kite/profile')};export const optionsApi={getExpiryDates:symbol=>api.get(\"/options/expiry-dates/\".concat(symbol)),getOptionChain:(symbol,expiry)=>api.get(\"/options/chain/\".concat(symbol,\"/\").concat(expiry))};export default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","concat","response","error","_error$response","status","removeItem","Promise","reject","kiteApi","validateToken","get","getProfile","optionsApi","getExpiryDates","symbol","getOptionChain","expiry"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { store } from '../store';\nimport { MarketData, OptionChainData } from '../types/market';\n\nconst API_URL = 'http://localhost:8000/api/v1';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include access token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('kite_access_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('kite_access_token');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const kiteApi = {\n  validateToken: (token: string) => api.get(`/kite/verify-token/${token}`),\n  getProfile: () => api.get('/kite/profile'),\n};\n\nexport const optionsApi = {\n  getExpiryDates: (symbol: string) => \n    api.get(`/options/expiry-dates/${symbol}`),\n  getOptionChain: (symbol: string, expiry: string) => \n    api.get(`/options/chain/${symbol}/${expiry}`),\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAIzB,KAAM,CAAAC,OAAO,CAAG,8BAA8B,CAE9C;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,OAAO,CAChBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CACvD,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,WAAAQ,MAAA,CAAaH,KAAK,CAAE,CACrD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,EAAKA,QAAQ,CACrBC,KAAK,EAAK,KAAAC,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAD,KAAK,CAACD,QAAQ,UAAAE,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClC;AACAN,YAAY,CAACO,UAAU,CAAC,mBAAmB,CAAC,CAC9C,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,OAAO,CAAG,CACrBC,aAAa,CAAGZ,KAAa,EAAKR,GAAG,CAACqB,GAAG,uBAAAV,MAAA,CAAuBH,KAAK,CAAE,CAAC,CACxEc,UAAU,CAAEA,CAAA,GAAMtB,GAAG,CAACqB,GAAG,CAAC,eAAe,CAC3C,CAAC,CAED,MAAO,MAAM,CAAAE,UAAU,CAAG,CACxBC,cAAc,CAAGC,MAAc,EAC7BzB,GAAG,CAACqB,GAAG,0BAAAV,MAAA,CAA0Bc,MAAM,CAAE,CAAC,CAC5CC,cAAc,CAAEA,CAACD,MAAc,CAAEE,MAAc,GAC7C3B,GAAG,CAACqB,GAAG,mBAAAV,MAAA,CAAmBc,MAAM,MAAAd,MAAA,CAAIgB,MAAM,CAAE,CAChD,CAAC,CAED,cAAe,CAAA3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}