{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { websocketService } from '../services/websocket';\nimport { setConnected } from '../store/slices/websocketSlice';\nexport const useWebSocket = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    clientId,\n    subscriptions\n  } = useSelector(state => state.websocket);\n  const connect = useCallback(() => {\n    const newClientId = clientId || `client-${Date.now()}`;\n    websocketService.connect(newClientId, subscriptions);\n    dispatch(setConnected(true));\n  }, [clientId, subscriptions, dispatch]);\n  const disconnect = useCallback(() => {\n    websocketService.disconnect();\n    dispatch(setConnected(false));\n  }, [dispatch]);\n  return {\n    connect,\n    disconnect\n  };\n};\n_s(useWebSocket, \"J8MY5bgfmyDd3mfND9WwksJhWz0=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["useCallback","useDispatch","useSelector","websocketService","setConnected","useWebSocket","_s","dispatch","clientId","subscriptions","state","websocket","connect","newClientId","Date","now","disconnect"],"sources":["C:/Users/inder/CascadeProjects/KavasCAPITALFASTAPI-new/frontend/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type { RootState } from '../store';\nimport { websocketService } from '../services/websocket';\nimport { setConnected } from '../store/slices/websocketSlice';\n\nexport const useWebSocket = () => {\n  const dispatch = useDispatch();\n  const { clientId, subscriptions } = useSelector(\n    (state: RootState) => state.websocket\n  );\n\n  const connect = useCallback(() => {\n    const newClientId = clientId || `client-${Date.now()}`;\n    websocketService.connect(newClientId, subscriptions);\n    dispatch(setConnected(true));\n  }, [clientId, subscriptions, dispatch]);\n\n  const disconnect = useCallback(() => {\n    websocketService.disconnect();\n    dispatch(setConnected(false));\n  }, [dispatch]);\n\n  return {\n    connect,\n    disconnect,\n  };\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,YAAY,QAAQ,gCAAgC;AAE7D,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,QAAQ;IAAEC;EAAc,CAAC,GAAGP,WAAW,CAC5CQ,KAAgB,IAAKA,KAAK,CAACC,SAC9B,CAAC;EAED,MAAMC,OAAO,GAAGZ,WAAW,CAAC,MAAM;IAChC,MAAMa,WAAW,GAAGL,QAAQ,IAAI,UAAUM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IACtDZ,gBAAgB,CAACS,OAAO,CAACC,WAAW,EAAEJ,aAAa,CAAC;IACpDF,QAAQ,CAACH,YAAY,CAAC,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACI,QAAQ,EAAEC,aAAa,EAAEF,QAAQ,CAAC,CAAC;EAEvC,MAAMS,UAAU,GAAGhB,WAAW,CAAC,MAAM;IACnCG,gBAAgB,CAACa,UAAU,CAAC,CAAC;IAC7BT,QAAQ,CAACH,YAAY,CAAC,KAAK,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,OAAO;IACLK,OAAO;IACPI;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CArBWD,YAAY;EAAA,QACNJ,WAAW,EACQC,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}